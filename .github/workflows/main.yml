# Workflow CI : build et tests automatiques du backend et dÃ©ploiement Docker.hfhcggc

name: CI devops 2025

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build and test with Maven
        run: mvn clean verify
        working-directory: backend

      - name: Run SonarCloud analysis
        run: mvn -B verify sonar:sonar \
          -Dsonar.projectKey=Project-Docker \
          -Dsonar.organization=ansible-course \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          --file ./backend/pom.xml
        shell: bash

  build-and-push-docker-image:
    needs: test-backend
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Prepare Docker username
        run: |
          echo "Preparing Docker username"
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          elif [ -n "${{ secrets.SECRET_EMAIL }}" ]; then
            if echo "${{ secrets.SECRET_EMAIL }}" | grep -q '@'; then
              echo "ERROR: SECRET_EMAIL contains '@'."
              exit 1
            else
              echo "DOCKER_USERNAME=${{ secrets.SECRET_EMAIL }}" >> $GITHUB_ENV
            fi
          else
            echo "ERROR: Set DOCKERHUB_USERNAME or SECRET_EMAIL secret"
            exit 1
          fi
        shell: bash

      - name: Validate Docker credentials
        run: |
          if [ -z "${{ secrets.SECRET_EMAIL }}" ] && [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "ERROR: Missing Docker username secret"
            exit 1
          fi
          if [ -z "${{ secrets.SECRET_TOKEN }}" ] && [ -z "${{ secrets.SECRET_PASSWORD }}" ]; then
            echo "ERROR: Missing Docker password/token secret"
            exit 1
          fi
        shell: bash

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME || secrets.SECRET_EMAIL }}
          password: ${{ secrets.SECRET_TOKEN || secrets.SECRET_PASSWORD }}
          ecr: auto
          logout: true

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/tp-devops-simple-api-backend:latest

      - name: Build and push database image
        uses: docker/build-push-action@v6
        with:
          context: ./initdb
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/tp-devops-simple-api-database:latest

      - name: Build and push httpd image
        uses: docker/build-push-action@v6
        with:
          context: ./httpd
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/tp-devops-simple-api-httpd:latest
